/*! @brief Zip file object with read and write operations. */
interface ZipFile : object
{
	/*! @brief Get list of file name in zip file. */
	List namelist() async;

	/*! @brief Get list of file info in zip file. */
	List infolist() async;

	/*! @brief Get file info.
	 @param member Name of file
	*/
	ZipInfo getinfo(String member) async;

	/*! @brief Read file data in zip file.
     @param member Name of the specific file.
     @return Data of file read from the zip file.
     */
	Buffer read(String member) async;

	/*! @brief Read data of all file in zip file.
     @return List of file data.
     */
	List readAll() async;

	/*! @brief Extract a specific file in zip file.
     @param member The specific file name.
     @param path The file path to store the decompressed file.
     */
	extract(String member, String path) async;

	/*! @brief Extract a specific file from zip file into stream.
     @param member The specific file name.
     @param strm The stream to store file data.
     */
	extract(String member, SeekableStream strm) async;

	/*! @brief Extract all files
     @param path Path to store all files extracted from zip file.
     */
	extractAll(String path) async;

	/*! @brief Write specific a file into zip file.
     @param filename Name of the specific file.
     */
	write(String filename) async;

	/*! @brief Write buffer data into zip file.
     @param data Buffer data.
     @param inZipName File name in zip file.
     */
	write(Buffer data, String inZipName) async;

	/*! @brief Write stream data into zip file.
     @param data Stream data.
     @param inZipName File name in zip file.
     */
	write(SeekableStream strm, String inZipName) async;

	/*! @brief Close zip file */
	close() async;
};
