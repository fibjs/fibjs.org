/*! @brief ssl/tls module */
module ssl
{
    /*! @brief certificate verification mode, default is no verification*/
    const Integer VERIFY_NONE = 0;

    /*! @brief certificate verification mode, optional verification mode, will allow deny*/
    const Integer VERIFY_OPTIONAL = 1;

    /*! @brief certificate verification mode, require verification, suspend if fails */
    const Integer VERIFY_REQUIRED = 2;

    /*! @brief verification result，timeout*/
    const Integer BADCERT_EXPIRED = 1;

    /*! @brief verification result，certificate has been revoked*/
    const Integer BADCERT_REVOKED = 2;

    /*! @brief verification result，wrong certificate name*/
    const Integer BADCERT_CN_MISMATCH = 4;

    /*! @brief verification result，certificate not trusted*/
    const Integer BADCERT_NOT_TRUSTED = 8;

    /*! @brief create a sslSocket object，reference sslSocket */
    static SslSocket new Socket();

    /*! @brief create a sslhandler object，reference sslhandler*/
    static SslHandler new Handler();

    /*! @brief create a sslServer object，reference sslServer*/
    static SslServer new Server();

    /*! @brief create a SslSocket object and etablish a connection
     @param url connection target url，e.g. ssl://host:port
     @return successful connected SslSocket object
     */
    static Stream connect(String url) async;

    /*! @brief global certificate，used when verfiy server certificate on client side */
    static readonly X509Cert ca;

    /*! @brief create verification mode，default is VERIFY_REQUIRED */
    static Integer verification;
};
