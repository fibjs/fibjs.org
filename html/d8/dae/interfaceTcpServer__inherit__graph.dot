digraph "TcpServer"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{TcpServer\n|+ socket\l+ handler\l+ stats\l|+ TcpServer()\l+ TcpServer()\l+ run()\l+ asyncRun()\l+ stop()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{object\n||+ dispose()\l+ toString()\l+ toJSON()\l+ valueOf()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d38/interfaceobject.html",tooltip="基础对象，所有对象均继承于此 "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{HttpServer\n|+ crossDomain\l+ forceGZIP\l+ maxHeadersCount\l+ maxUploadSize\l+ httpStats\l|+ HttpServer()\l+ HttpServer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d79/interfaceHttpServer.html",tooltip="http 服务器对象 "];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{HttpsServer\n|+ verification\l+ ca\l|+ HttpsServer()\l+ HttpsServer()\l+ HttpsServer()\l+ HttpsServer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d42/interfaceHttpsServer.html",tooltip="https 服务器对象 "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{SslServer\n|+ verification\l+ ca\l|+ SslServer()\l+ SslServer()\l+ SslServer()\l+ SslServer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d5c/interfaceSslServer.html",tooltip="ssl 服务器对象，可方便创建一个标准多纤程 ssl 服务器 "];
}
